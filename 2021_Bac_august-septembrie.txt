S1
1.d

2.b
f(1234) = 1 + 3 = 4 

3.a?
Utilizând metoda backtracking se generează toate numerele formate din cifre distincte, cifre a căror
sumă să fie 6. Primele patru soluții generate sunt, în această ordine: 1023, 1032, 105 și 1203. Indicați
cea de a șasea soluție generată.
1023
1032
105
1203
123
1230

4.b

5.c

S2
1. 
a)
15 3 4
3 4 6 8 9 15
b) 
2 5 8
10 15 20
d)
cat timp i <= n, executa

2.
i = 6; j = 3;
s[6] = s[3]
s[3] = s[6]  ROMANIA

i = 3; j = 2;
RAMONIA

i = 1  j = 1
ARMONIA


3. a[0].dp.anNastere = 2000
   a[0].venit = 4000


S3
1.
#include <iostream>

using namespace std;

int main()
{
    int n;
    cin >> n;
    for(int i = n; i >= 1; i--){
        cout << i * i * i <<" ";
    }
}

2.
#include <iostream>

using namespace std;

int main() {
    int a[500][500] = {}, n, k;
    cin >> n >> k;
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            a[i][i] = i * k;
        }
    }
     for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            if(i > j) a[i][j] = a[i][i] - i + j;
            else if (j > i) a[i][j] = a[i][i] + j - i;
        }
    }
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            cout << a[i][j] << " ";
        }
        cout << "\n";
    }
    return 0;
}

3.
#include <iostream>

using namespace std;

int main() {
    int v[500]= {}, n, m, x, y, c1 = 0 , c2 = 0, nr = 0;
    cin >> n >> m;
    while(n != 0){
        cin >> x;
        n--;
        v[x%100] ++;
    }
    //for(int k = 1; k <= 100; k++){
    //    cout << v[k] <<" ";
    //}
    while(m != 0){
        cin >> y;
        m--;
        c1 = y % 10;
        c2 = (y / 10) % 10;
        int i = c1 * 10 + c2;
        int j = c2 * 10 + c1;
        if(i != j) nr = nr + v[i] + v[j];
        else nr = nr + v[i];
    }
    cout << nr;
    return 0;
}

