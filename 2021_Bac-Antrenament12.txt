1.c
2.a
3.d
rosu galben verde albastru violet
1	2	3	4	5
123 124 125 132 134 135 142 143 145 152

4.b
r = a % b
a = b
b = r

5.c

S2
1.
a)5 2
2 2 4 4 9

b) 
19 ,6
23

d)
cat timp i >= 1 executa

2.
ciclu neelementar : 165361
lant elementar : 12456

3.
CALCULATOARE
if s[i] == 'OAU' cout << '*'
else cout << s[i];


S3;
1.
    void frate (int x, int &y){
        int p = 1;
        int nr = x;
        while (nr != 0){
            p *= 10;
            nr = nr / 10;
        }
        if(x / p + 1 >9){
            y = -1;
        }
        else{
            p = 1;
        while(x != 0){
            y = y + (x % 10 + 1) % 10 * p;
            p = p * 10;
            x = x / 10;
            }
        }
    }

2.
int x = a[k][n-k];
    for(int i = n - k ; i >= 1; i --){
        a[k][i] = a[k][i - 1];
   }

3.

#include <iostream>

using namespace std;

Memoram primul element intr o variabila x, dupa care parcurgem toate elementele si verificam daca acestea sunt mai mari sau egale cu x, crescand
contorul k in functie de aceasta conditie. Pozitia elementului x in sirul ordonat descrescator va fi k + 1.

int main()
{
    int x, y, k = 0;
    cin >> x;
    while(cin >> y){
        if(y >= x) k++;
    }
    cout << k + 1;
}

Din punct de vedere al spatiului, programul are o eficienta O(1), iar din punct de vedere al timpului de executare, programul are o 
eficienta O(n)?
