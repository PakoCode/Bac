S1
1.a
2.d
3.d
4.b
5.c

S2.
1.a
x = 5
y = 8

1111121121

b) x = 10
y = 6 
y = 15

d)
i <- y
cat timp i > x executa
...
i <- i - 1
2.
cinteza ciocarlie mierla privighetoare scatiu
1 	2	  3	 4		5

 25 35

3.
fs.a = 2020 * f.b - 2021 * f.a
fs.b = 2021 * f.b

S3.
1.
void divPrim(int n, int &s){
    int p = 0, i = 2;
    while (n != 1){
        while(n % i == 0){
            p ++;
            n = n / i;
        }
        if(p % 2 != 0) s = s + i;
        i++;
    }
    cout << s;
}

2.
#include <iostream>
#include <string.h>
using namespace std;
int main()
{
   int n, k, p = 1;
   cin >> n >> k;
   char s[21], rez[21][11];
   for(int i = 1; i <= n; i++){
        cin >> s;
        int u = strlen(s) - 1;
        char c = s[u];
       if(strchr("aeiou", c) != NULL){
          strcpy(rez[p], s);
          p++;
       }
   }
   if(p <= k) cout << "nu exista";
   else{
    for(int i = 1; i <= k; i++){
        cout << rez[i] << '\n';
    }
   }

}

3.
#include <iostream>
#include <string.h>
using namespace std;
int main()
{
   int x, a, b, c = -1 , d = -1;
   cin >> x;
   cin >> a;
   while(cin >> b){
        //cout << a <<" ";
    if(a % 1000 == x && b % 1000 == x){
        c = a;
        d = b;
    }
    a = b;
    //cin >> b;
   }
   if(c == -1 && d == -1) cout << "nu exista";
   else{
    cout << c <<" " << d;
   }
}
Vom parcurge numerele doua cate doua, iar daca gasim doua numere 
consecutive care respecta cerinta, le vom memora in variabilele c si
d. La sfarsit, daca am gasit doua numere conform cerintei, le vom afisa
iar daca nu, vom afisa mesajul "nu exista";
Acest program, din punct de vedere al spatiului are o eficienta
de O(1), iar din punct de vedere al timpului are o eficienta de O(n)