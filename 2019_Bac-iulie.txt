S1
1.a
2.b
f(6) = 2 + 3 = 5
f(5) = -1 +3 = 2
f(4) = -1 - 2 = -3
f(3) = -1
f(2) = 2
f(1) = 1

3.d;

4.b
{0,1,2,3,4,5} - numere distincte

5432 5431 5430 5423 5421 5420 5413

5.c

S2

1.
a) 3
s1 = 7
s2 = 2
s = 3

b)25 si 26
s1 = 12
s2 = 1

c)
#include <iostream>
using namespace std;
  int main(){
    int m, n, p, q, s, s1, s2;
    cin >> m >> n >> p >> q;
    s1 = 0;
    s2 = 0;
    while(p <= q){
      if(p % m == 0 || p % n == 0){
        s1 = s1 + 1;
        }
      if(p % m == 0 && p % n == 0){
        s2 = s2 + 1;
        }
      p ++;
     }
     s = s1 - 2 * s2;
     cout << s;
     return 0;
   }
   
d)pentru p, q executa
   
2. 2 6 5 1 4

3.
fig.centru.x = 0;
fig.centru.y = 0;
fig.raza = 1;


S3

1.
void impare(int &n){
    int neew = 0, cif = 0, p = 1;
    while(n != 0){
        cif = n % 10;
        if(cif % 2 != 0) cif = cif - 1;
        if(cif != 0){
            neew = cif * p + neew;
        }
        p = p * 10;
        n = n / 10;
    }
    n = neew;
}


2.
#include <iostream>

using namespace std;
int main() {
    int a[21][21], m, n, ok = 1;
    cin >> m >> n;
    for(int i = 1; i <= m; i ++){
        for(int j = 1; j <= n; j ++){
            cin >> a[i][j];
        }
    }
    for(int j = 1; j <= n; j ++){
        for(int i = 1; i <= m; i ++){
            if(a[i][j] != a[i][n - j + 1]) ok = 0;
        }
    }
    if(ok == 0) cout << "NU";
    else cout << "DA";
    return 0;
}

3.
#include <iostream>
#include <fstream>
using namespace std;
int main() {
    int x, y = -1, maxim = -1;
    while(cin >> x){
        if(x > maxim){
            maxim = x;
            cout << maxim << " ";
        } 
        if(x == y) cout << maxim << " ";
        y = x;
    }
    return 0;
}




    

