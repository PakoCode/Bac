SI
1.d
2.

a)
2

b)
125,624

c)
pentru i<-1 , n, executa

SII
1.a
2.b
3.1,7,8
4.
int main() {
    char a[20]={}, b[40];
    cin.getline(b,40);
    for(int i=0; i<strlen(b)/2; i++){
        a[i]=b[i];
    }
    cout<<a;
    return 0;
}

5.
#include <iostream>
#include <string.h>
using namespace std;
int a[20][20]={}, b[4]={}, n;
void citire(){
      for(int i=1; i<=n; i++){
       cin>>b[i];
   }
}
void permutare(){
    int aux[20]={};
    aux[1]=b[n];
    for(int i=2; i<=n; i++){
        aux[i]=b[i-1];
    }
    for(int i=1; i<=n; i++){
        b[i]=aux[i];
    }
}
int main(){
   cin>>n;
   citire();
   for(int i=1; i<=n; i++){
       cin>>b[i];
   }
     for(int i=1; i<=n; i++){
         for(int j=1; j<=n; j++){
             a[i][j] = b[j];
         }
         permutare();
   }
      for(int i=1; i<=n; i++){
         for(int j=1; j<=n; j++){
             cout<<a[i][j]<<" ";
         }
         cout<<endl;
   }
    return 0;
}

SIII
1.d
2.d,c,b,a
3.
int f(int n){
    if(n==1 || n==2){
        return 1;
    }
    return f(n-1)+f(n-2);
}

4.
#include <iostream>
#include <string.h>
using namespace std;
void permutare() {
    int aux[20];
    aux[1] = b[n];
    for (int i = 2; i < n; i++) {
        aux[i] = b[i - 1];
    }
    for (int i = 1; i <= n; i++) {
        b[i] = aux[i];
    }
}
int main() {
    int a[100] = {}, x, c=0;
    while (cin >> x) {
        a[x]++;
        c++;
    }
    if (c == 0) {
        cout << "Nu exista";
        return 0;
    }
    int x, y;
    int ok = 0;
    for (int i = 0; i <= 100; i++) {
        if (a[i] > 0 && a[i + 1] == 0) {
            x = i;
            i++;
            while (a[i] == 0 && i<=100) {
                i++;
            }
            if (i == 100 && ok==0) {
                cout << "Nu exista";
                return 0;
            }
            ok = 1;
            y = i;
            cout << x << " " << y << endl;
        }

    }
    return 0;
}


